language: perl

matrix:
  include:
# First five
    - perl: "5.26"
      env: WITH_IPC_RUN=1 WITH_NET_OPENSSH=1 WITH_BSD_RESOURCE=1 WITH_DEVEL_HIDE=1
    - perl: "5.20"
      env: DO_DIST_INSTALL=1
    # Actually the perl here does not matter
    - perl: "5.18"
      env: USE_SYSTEM_PERL=1
      dist: trusty
    - perl: "5.16"
    # The perl does not matter here, system perl will be used
    - perl: "5.18"
      os: osx
# Second five
    - perl: "5.12"
      env: WITH_IPC_RUN=1
    - perl: "5.10"
    - perl: "5.8"
      env: WITH_IPC_RUN=1 WITH_NET_OPENSSH=1 WITH_BSD_RESOURCE=1 WITH_DEVEL_HIDE=1
    # Actually the perl here does not matter
    - perl: "5.14"
      env: USE_SYSTEM_PERL=1
    - perl: "5.22"
      env: WITH_IPC_RUN=1

before_install:
 - if [ "$USE_SYSTEM_PERL" = 1 ]; then perlbrew off; fi

install:
 # cpanm is not available on MacOSX, so don't do anything here
 # see https://github.com/travis-ci/travis-ci/issues/2314
 # This works because this module has only optional dependencies
 #
 # On Linux run the normal travis-ci install command.
 - if [ "$TRAVIS_OS_NAME" = "linux" ]; then cpanm --quiet --installdeps --notest .; fi
 - if [ "$TRAVIS_OS_NAME" = "linux" -a "$WITH_IPC_RUN" = 1 ]; then cpanm --quiet --notest IPC::Run; fi
 - if [ "$TRAVIS_OS_NAME" = "linux" -a "$WITH_NET_OPENSSH" = 1 ]; then cpanm --quiet --notest Net::OpenSSH; fi
 - if [ "$TRAVIS_OS_NAME" = "linux" -a "$WITH_BSD_RESOURCE" = 1 ]; then cpanm --quiet --notest BSD::Resource; fi
 - if [ "$TRAVIS_OS_NAME" = "linux" -a "$WITH_DEVEL_HIDE" = 1 ]; then cpanm --quiet --notest Devel::Hide; fi

addons:
  apt:
    packages:
      # For Doit::Locale
      - locales

script:
 - perl Build.PL && ./Build && ./Build test && sudo ./Build test_xt
 # Cannot install on MacOSX
 - if [ "$TRAVIS_OS_NAME" = "linux" -a "$DO_DIST_INSTALL" = "" ]; then $(if [[ "$USE_SYSTEM_PERL" = 1 ]]; then echo sudo; fi) ./Build install && ./Build test-installed; fi
 - if [ "$TRAVIS_OS_NAME" = "linux" -a "$DO_DIST_INSTALL" = 1  ]; then $(if [[ "$USE_SYSTEM_PERL" = 1 ]]; then echo sudo; fi) ./Build dist_install_and_test; fi

branches:
  except:
    - /appveyor/
sudo: true
