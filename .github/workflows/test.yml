name: CI

on:
  push:
    branches-ignore:
      - '*travis*'
      - '*appveyor*'
      - '*doozer*'
  pull_request:

jobs:
  test:
    name: Test on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
     matrix:
## XXX windows not yet working --- TODO
#       os: [ubuntu-latest, windows-latest, macos-latest]
       os: [ubuntu-20.04, ubuntu-22.04, macos-latest]

    steps:
    - uses: actions/checkout@v2
      with:
        clean: false
    - name: Build and test
      run: |
        perl Build.PL
        ./Build
        ./Build test
      if: "!startsWith(matrix.os,'windows-')"
    - name: Build and test on Windows
      run: |
        c:\strawberry\perl\bin\perl Build.PL
        c:\strawberry\perl\bin\perl Build
        c:\strawberry\perl\bin\perl Build test
      if: "startsWith(matrix.os, 'windows-')"

  test_in_container:
    name: Test with perl ${{ matrix.perlimage }}
    runs-on: ubuntu-latest
    container: perl:${{ matrix.perlimage }}
    strategy:
      matrix:
        include:
          - perlimage: 5.8.9-threaded-stretch
          - perlimage: 5.10.1-buster
          - perlimage: 5.12.5-stretch
          - perlimage: 5.14.4-stretch
          - perlimage: 5.16.3-buster
          - perlimage: 5.18.4-buster
          - perlimage: 5.22.4-stretch
          - perlimage: 5.36.0-slim-bullseye

    steps:
    - uses: actions/checkout@v2
    - name: Preinstall, Configure, Build and Test
      env:
        HARNESS_TIMER:   1
        HARNESS_OPTIONS: j8
      run: |
        cpanm --quiet --installdeps --notest . || ( cat /github/home/.cpanm/work/*/build.log; false )
        perl Build.PL
        ./Build
        ./Build test

  coverage:
    name: Test coverage
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
      with:
        clean: false
    - name: install Devel::Cover::Report::Coveralls
      run: |
        sudo apt-get update -qq
        sudo apt-get install -q --no-install-recommends \
            cpanminus \
            libdevel-cover-perl \
            libcapture-tiny-perl libipc-run-perl libdevel-hide-perl
        sudo cpanm --quiet --notest Devel::Cover::Report::Coveralls
    - name: Build and test with coverage
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        DOIT_TEST_WITH_SUDO: 1
      run: |
        perl Build.PL
        ./Build
        cover -test -report coveralls
